generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  phoneNumber String @unique
  pin String

  name String @default("Не указано")
  picture String @default("/uploads/no-user-image.png")

  balance Int
  cashback Int

  favorites Wash[]

  // Связь с мойками через промежуточную таблицу
  washes WashUser[]

  @@map("user")
}

model Wash {
  id String @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String @default("Новая мойка") @unique
  picture String @default("/uploads/no-wash-image.png")
  city String @default("Киров")

  // Связь с пользователями через промежуточную таблицу
  users WashUser[]
  posts Post[]
  promoCodes PromoCode[]

  @@map("wash")
  Price Price[]
  user       User?       @relation(fields: [userId], references: [id])
  userId     String?     @map("user_id")
}

// Промежуточная таблица для связи User и Wash
model WashUser {
  id String @id @default(cuid())
  userId String
  washId String

  balance Int // Баланс пользователя на конкретной мойке

  user User @relation(fields: [userId], references: [id])
  wash Wash @relation(fields: [washId], references: [id])

  @@map("wash_user")
}

model Post {
  id String @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  address String
  description String
  pictures String @default("/uploads/no-post-image.png")

  washId String
  wash Wash @relation(fields: [washId], references: [id])

  @@map("post")
}

model PromoCode {
  id String @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")

  endTime DateTime
  nominal Int

  washId String
  wash Wash @relation(fields: [washId], references: [id])

  @@map("promo_code")
}

model Price {
  id String @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  washId String
  price Int

  wash Wash @relation(fields: [washId], references: [id])

  @@map("price")
}
